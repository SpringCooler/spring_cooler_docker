version: '3.8'


services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./servers:/etc/nginx/servers
    depends_on:
      - api-service-1
      - api-service-2
      - api-service-3
    networks:
      - spring_cooler
    container_name: nginx
  frontend:
    working_dir: /src
    image: hai0421/spring_cooler_front:latest
    ports:
      - 3000:3000
    environment:
      - HOST=0.0.0.0
    depends_on:
      - api-service-1
      - api-service-2
      - api-service-3
    networks:
      - spring_cooler
    container_name: frontend-1
    restart: always
    
  api-service-1:
    image: hai0421/spring_cooler_back:latest
    ports:
      - 8080:8080
    networks:
      - spring_cooler
    restart: always
    container_name: api-service-1
  api-service-2:
    image: hai0421/spring_cooler_back:latest
    ports:
      - 8081:8080
    networks:
      - spring_cooler
    restart: always
    container_name: api-service-2
  api-service-3:
    image: hai0421/spring_cooler_back:latest
    ports:
      - 8082:8080
    networks:
      - spring_cooler
    restart: always
    container_name: api-service-3

  db:
    image: mysql:8.1.0
    restart: always
    command:
    - --lower_case_table_names=1
    - --character-set-server=utf8mb4
    - --collation-server=utf8mb4_unicode_ci
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=spring_cooler
      - MYSQL_ROOT_PASSWORD=Tjrdl1651!
      - TZ=Asia/Seoul
    volumes:
      - /Users/choeminseog/TEMP/MYSQL:/var/lib/mysql
      # - ./db/mysql/data:/var/lib/mysql
      # - ./db/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - spring_cooler

  # redis_container:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./redis/data:/data
  #     - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
  #   labels:
  #     - "name=redis"
  #     - "mode=standalone"
  #   restart: always
  #   command: redis-server /usr/local/conf/redis.conf
  #   networks:
  #     - spring_cooler
networks:
  spring_cooler:
    external: true